{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createVNode as _createVNode } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"wrapper\"\n};\nvar _hoisted_2 = {\n  \"class\": \"post-buttons\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_Post = _resolveComponent(\"Post\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = function () {\n      return $options.logout && $options.logout.apply($options, arguments);\n    }),\n    \"class\": \"logout-button\"\n  }, \"Logout\"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.posts, function (post) {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: post.id\n    }, [_createVNode(_component_Post, {\n      post: post\n    }, null, 8 /* PROPS */, [\"post\"])]);\n  }), 128 /* KEYED_FRAGMENT */)), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"button\", {\n    \"class\": \"post-button\",\n    onClick: _cache[1] || (_cache[1] = function () {\n      return $options.openAddPost && $options.openAddPost.apply($options, arguments);\n    })\n  }, \"Add post\"), _createElementVNode(\"button\", {\n    \"class\": \"post-button\",\n    onClick: _cache[2] || (_cache[2] = function () {\n      return $options.deleteAllPosts && $options.deleteAllPosts.apply($options, arguments);\n    })\n  }, \"Delete all\")])]);\n}","map":{"version":3,"mappings":";;EACO,SAAM;AAAS;;EAKb,SAAM;AAAc;;;uBAL3BA,oBASM,OATNC,UASM,GARJC,oBAA6D;IAApDC,OAAK;MAAA,OAAEC,6DAAM;IAAA;IAAE,SAAM;KAAgB,QAAM,sBACpDJ,oBAEMK,6BAFcD,cAAK,YAAbE,IAAI;yBAAhBN,oBAEM;MAFsBO,GAAG,EAAED,IAAI,CAACE;QACpCC,aAAoBC;MAAbJ,IAAI,EAAEA;IAAI;kCAEnBJ,oBAGM,OAHNS,UAGM,GAFJT,oBAAkE;IAA1D,SAAM,aAAa;IAAEC,OAAK;MAAA,OAAEC,uEAAW;IAAA;KAAE,UAAQ,GACzDF,oBAAuE;IAA/D,SAAM,aAAa;IAAEC,OAAK;MAAA,OAAEC,6EAAc;IAAA;KAAE,YAAU","names":["_createElementBlock","_hoisted_1","_createElementVNode","onClick","$options","_Fragment","post","key","id","_createVNode","_component_Post","_hoisted_2"],"sourceRoot":"","sources":["C:\\Users\\karla\\Desktop\\kolmas\\TheLastOne\\FrontEnd\\src\\views\\HomeView.vue"],"sourcesContent":["<template>\r\n  <div class=\"wrapper\">\r\n    <button @click=\"logout\" class=\"logout-button\">Logout</button>\r\n    <div v-for=\"post in posts\" :key=\"post.id\">\r\n      <Post :post=\"post\"/>\r\n    </div>\r\n    <div class=\"post-buttons\">\r\n      <button class=\"post-button\" @click=\"openAddPost\">Add post</button>\r\n      <button class=\"post-button\" @click=\"deleteAllPosts\">Delete all</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Post from \"@/components/Post\";\r\n\r\nexport default {\r\n  components: {\r\n    Post,\r\n  },\r\n\r\n  computed: {\r\n    posts() {\r\n      return this.$store.getters.getPosts;\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    async logout() {\r\n      try {\r\n        const response = await fetch(\"http://localhost:3000/auth/logout\", {\r\n          credentials: 'include',\r\n        });\r\n        const data = await response.json();\r\n        console.log(data);\r\n        this.$router.push(\"/login\");\r\n      } catch (e) {\r\n        console.error(\"Error during logout:\", e);\r\n      }\r\n    },\r\n\r\n    openAddPost() {\r\n      this.$router.push(\"/add-post\");\r\n    },\r\n\r\n    deleteAllPosts() {\r\n      this.$store.dispatch('deleteAllPostsAct');\r\n    },\r\n  },\r\n\r\n  mounted() {\r\n    this.$store.dispatch('getAllPostsAct');\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n/* ... existing styles ... */\r\n\r\n.logout-button {\r\n  /* Updated class name for consistency */\r\n  /* ... existing styles ... */\r\n}\r\n\r\n.post-button {\r\n  /* Updated class name for consistency */\r\n  /* ... existing styles ... */\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}