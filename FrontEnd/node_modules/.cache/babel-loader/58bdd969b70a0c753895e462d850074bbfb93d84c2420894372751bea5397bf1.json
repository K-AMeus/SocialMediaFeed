{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"individual-post\"\n};\nvar _hoisted_2 = {\n  \"class\": \"post-body\"\n};\nvar _hoisted_3 = {\n  \"class\": \"post-actions\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"h1\", null, _toDisplayString(\"Post \" + $data.post.id), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"textarea\", null, _toDisplayString($data.post.body), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = function () {\n      return $options.updatePost && $options.updatePost.apply($options, arguments);\n    })\n  }, \"Update\"), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = function () {\n      return $options.deletePost && $options.deletePost.apply($options, arguments);\n    })\n  }, \"Delete\")])]);\n}","map":{"version":3,"mappings":";;EACS,SAAM;AAAiB;;EAErB,SAAM;AAAW;;EAGjB,SAAM;AAAc;;uBAL3BA,oBASM,OATNC,UASM,GARJC,oBAAgC,uCAAfC,UAAI,CAACC,EAAE,kBACxBF,oBAEM,OAFNG,UAEM,GADJH,oBAAoC,mCAAvBC,UAAI,CAACG,IAAI,oBAExBJ,oBAGM,OAHNK,UAGM,GAFJL,oBAA2C;IAAlCM,OAAK;MAAA,OAAEC,qEAAU;IAAA;KAAE,QAAM,GAClCP,oBAA2C;IAAlCM,OAAK;MAAA,OAAEC,qEAAU;IAAA;KAAE,QAAM","names":["_createElementBlock","_hoisted_1","_createElementVNode","$data","id","_hoisted_2","body","_hoisted_3","onClick","$options"],"sourceRoot":"","sources":["C:\\Users\\karla\\Desktop\\kolmas\\TheLastOne\\FrontEnd\\src\\views\\IndividualPost.vue"],"sourcesContent":["<template>\r\n    <div class=\"individual-post\">\r\n      <h1>{{ \"Post \" + post.id }}</h1>\r\n      <div class=\"post-body\">\r\n        <textarea>{{ post.body }}</textarea>\r\n      </div>\r\n      <div class=\"post-actions\">\r\n        <button @click=\"updatePost\">Update</button>\r\n        <button @click=\"deletePost\">Delete</button>\r\n      </div>\r\n    </div>\r\n  </template>\r\n    \r\n  <script>\r\n  export default {\r\n    data() {\r\n      return {\r\n        post: {},\r\n      };\r\n    },\r\n    mounted() {\r\n      // Fetch the data for the individual post using the route parameter\r\n      const postId = this.$route.params.id;\r\n      this.fetchPost(postId);\r\n    },\r\n    methods: {\r\n      fetchPost(postId) {\r\n        // Fetch the data for the individual post\r\n        fetch(`http://localhost:3000/post/get/${postId}`)\r\n          .then((response) => response.json())\r\n          .then((data) => {\r\n            this.post = data; // Directly assign the response data\r\n          })\r\n          .catch((error) => {\r\n            console.error(\"Error fetching individual post:\", error);\r\n          });\r\n      },\r\n  \r\n      updatePost() {\r\n        // Get the updated body directly from the textarea\r\n        const updatedBody = document.querySelector(\".post-body textarea\").value;\r\n  \r\n        // Send a request to update the post's body on the server\r\n        fetch(`http://localhost:3000/post/update/${this.post.id}`, {\r\n          method: \"PUT\", // Assuming you're using a PUT request for updates\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            body: updatedBody,\r\n          }),\r\n        })\r\n          .then((response) => response.json())\r\n          .then((data) => {\r\n            console.log(\"Post updated:\", data);\r\n  \r\n            // After updating, navigate back to the home page\r\n            this.$router.push(\"/\");\r\n          })\r\n          .catch((error) => {\r\n            console.error(\"Error updating post:\", error);\r\n          });\r\n      },\r\n  \r\n      deletePost() {\r\n        const postId = this.post.id;\r\n  \r\n        // Send a request to delete the post on the server\r\n        fetch(`http://localhost:3000/post/delete/${postId}`, {\r\n          method: \"DELETE\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        })\r\n          .then((response) => {\r\n            if (response.ok) {\r\n              console.log(\"Post deleted successfully\");\r\n  \r\n              this.$router.push(\"/\");\r\n            } else {\r\n              console.error(\"Error deleting post:\", response.statusText);\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            console.error(\"Error deleting post:\", error);\r\n          });\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style>\r\n  .individual-post {\r\n    margin: 0 auto;\r\n    padding: 20px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    height: 100vh;\r\n  }\r\n  \r\n  .post-body {\r\n    margin: 20px 0;\r\n    width: 60%;\r\n    height: 50%;\r\n  }\r\n  \r\n  .post-actions button {\r\n    padding: 12px 20px;\r\n    margin-right: 10px;\r\n    cursor: pointer;\r\n    background-color: deepskyblue;\r\n    border: none;\r\n    border-radius: 8px;\r\n    font-size: 16px;\r\n  }\r\n  \r\n  .post-actions {\r\n    display: flex;\r\n    gap: 20px;\r\n  }\r\n  \r\n  textarea {\r\n    width: 100%;\r\n    height: 100%;\r\n    padding: 10px;\r\n    box-sizing: border-box;\r\n    border: 1px solid #ccc;\r\n    border-radius: 8px;\r\n    font-size: 14px;\r\n    resize: vertical; /* Allow vertical resizing */\r\n  }\r\n  </style>\r\n    "]},"metadata":{},"sourceType":"module","externalDependencies":[]}