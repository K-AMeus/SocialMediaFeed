{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/karla/Desktop/kolmas/TheLastOne/FrontEnd/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/karla/Desktop/kolmas/TheLastOne/FrontEnd/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport Post from \"@/components/Post\";\nexport default {\n  components: {\n    Post: Post\n  },\n  computed: {\n    posts: function posts() {\n      return this.$store.getters.getPosts;\n    }\n  },\n  methods: {\n    logout: function logout() {\n      var _this = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var response, data;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return fetch(\"http://localhost:3000/auth/logout\", {\n                  credentials: 'include'\n                });\n              case 3:\n                response = _context.sent;\n                _context.next = 6;\n                return response.json();\n              case 6:\n                data = _context.sent;\n                console.log(data);\n                _this.$router.push(\"/login\");\n                _context.next = 14;\n                break;\n              case 11:\n                _context.prev = 11;\n                _context.t0 = _context[\"catch\"](0);\n                console.error(\"Error during logout:\", _context.t0);\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 11]]);\n      }))();\n    },\n    openAddPost: function openAddPost() {\n      this.$router.push(\"/add-post\");\n    },\n    deleteAllPosts: function deleteAllPosts() {\n      this.$store.dispatch('deleteAllPostsAct');\n    }\n  },\n  mounted: function mounted() {\n    this.$store.dispatch('getAllPostsAct');\n  }\n};","map":{"version":3,"mappings":";;;;AAcA,OAAOA,IAAG,MAAO,mBAAmB;AAEpC,eAAe;EACbC,UAAU,EAAE;IACVD,IAAI,EAAJA;EACF,CAAC;EAEDE,QAAQ,EAAE;IACRC,KAAK,mBAAG;MACN,OAAO,IAAI,CAACC,MAAM,CAACC,OAAO,CAACC,QAAQ;IACrC;EACF,CAAC;EAEDC,OAAO,EAAE;IACDC,MAAM,oBAAG;MAAA;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA;gBAAA,OAEYC,KAAK,CAAC,mCAAmC,EAAE;kBAChEC,WAAW,EAAE;gBACf,CAAC,CAAC;cAAA;gBAFIC,QAAO;gBAAA;gBAAA,OAGMA,QAAQ,CAACC,IAAI,EAAE;cAAA;gBAA5BC,IAAG;gBACTC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;gBACjB,KAAI,CAACG,OAAO,CAACC,IAAI,CAAC,QAAQ,CAAC;gBAAA;gBAAA;cAAA;gBAAA;gBAAA;gBAE3BH,OAAO,CAACI,KAAK,CAAC,sBAAsB,cAAI;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAE5C,CAAC;IAEDC,WAAW,yBAAG;MACZ,IAAI,CAACH,OAAO,CAACC,IAAI,CAAC,WAAW,CAAC;IAChC,CAAC;IAEDG,cAAc,4BAAG;MACf,IAAI,CAAChB,MAAM,CAACiB,QAAQ,CAAC,mBAAmB,CAAC;IAC3C;EACF,CAAC;EAEDC,OAAO,qBAAG;IACR,IAAI,CAAClB,MAAM,CAACiB,QAAQ,CAAC,gBAAgB,CAAC;EACxC;AACF,CAAC","names":["Post","components","computed","posts","$store","getters","getPosts","methods","logout","fetch","credentials","response","json","data","console","log","$router","push","error","openAddPost","deleteAllPosts","dispatch","mounted"],"sourceRoot":"","sources":["C:\\Users\\karla\\Desktop\\kolmas\\TheLastOne\\FrontEnd\\src\\views\\HomeView.vue"],"sourcesContent":["<template>\r\n  <div class=\"wrapper\">\r\n    <button @click=\"logout\" class=\"logout-button\">Logout</button>\r\n    <div v-for=\"post in posts\" :key=\"post.id\">\r\n      <Post :post=\"post\"/>\r\n    </div>\r\n    <div class=\"post-buttons\">\r\n      <button class=\"post-button\" @click=\"openAddPost\">Add post</button>\r\n      <button class=\"post-button\" @click=\"deleteAllPosts\">Delete all</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Post from \"@/components/Post\";\r\n\r\nexport default {\r\n  components: {\r\n    Post,\r\n  },\r\n\r\n  computed: {\r\n    posts() {\r\n      return this.$store.getters.getPosts;\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    async logout() {\r\n      try {\r\n        const response = await fetch(\"http://localhost:3000/auth/logout\", {\r\n          credentials: 'include',\r\n        });\r\n        const data = await response.json();\r\n        console.log(data);\r\n        this.$router.push(\"/login\");\r\n      } catch (e) {\r\n        console.error(\"Error during logout:\", e);\r\n      }\r\n    },\r\n\r\n    openAddPost() {\r\n      this.$router.push(\"/add-post\");\r\n    },\r\n\r\n    deleteAllPosts() {\r\n      this.$store.dispatch('deleteAllPostsAct');\r\n    },\r\n  },\r\n\r\n  mounted() {\r\n    this.$store.dispatch('getAllPostsAct');\r\n  }\r\n};\r\n</script>\r\n\r\n\r\n<style>\r\n*{\r\n    box-sizing: border-box;\r\n    margin: 0;\r\n    padding: 0;\r\n}\r\n\r\n.logout {\r\n  width: 70px;\r\n  height: 40px;\r\n  margin: 23px auto 0;\r\n  background-color: rgb(38, 207, 16);\r\n  border-radius: 15px;\r\n  cursor: pointer;\r\n  text-align: center;\r\n  color: black;\r\n  border: none;\r\n}\r\n\r\nhtml{\r\n    position: relative;\r\n    min-height: 100%;\r\n}\r\n\r\nbody {\r\n    margin: 0 0 100px;\r\n    font-family: 'Times New Roman', Times, serif, monospace;\r\n}\r\n\r\n.wrapper{\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.post-buttons{\r\n  display: flex;\r\n  justify-content: space-between;\r\n  width: 650px;\r\n  margin: 30px auto 0;\r\n}\r\n\r\n.post-btn{\r\n  cursor: pointer;\r\n  border-radius: 20px;\r\n  border: none;\r\n  font-size: 20px;\r\n  padding: 12px;\r\n  background-color: rgb(38, 207, 16);\r\n}\r\n\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}